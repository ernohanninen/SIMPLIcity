{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli_project/App/src/sample_table.js\";\n\n/*\nTitle: getResults.js\nDate: 2021-23-05\nAuthor: Erno Hänninen\nDescription:\n  - This scipt contains the table element where the samples are stored after submitting\n\nProcedure:\n - Map thru the input array and set the values to table\n - Remove elements from table after remove is clicked\n*/\n//Modules\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\"; //Function which adds element to the table and removes them from there and from the file\n\nvar Table = function Table(_ref) {\n  var tableData = _ref.tableData,\n      setTableData = _ref.setTableData;\n\n  //Function is called if delete is called. Removes the corresponding sample row and the sample from the metadata file\n  var deleteRow = function deleteRow(index, e) {\n    var sampleDel = tableData[index][\"sample\"]; //Delete the sample from the table\n\n    setTableData(tableData.filter(function (v, i) {\n      return i !== index;\n    })); //Send request to the backend to delete the sample from metadata file\n\n    var url = '/deleteSample';\n    axios.post(url, {\n      sample: sampleDel\n    }).then(function (response) {\n      //Sending data in JSON format\n      if (response.data == \"error\") {\n        //If error\n        console.log(\"########ERROR########\");\n      } else {\n        //IF everyting okay\n        console.log(\"READY\");\n      }\n    });\n  }; //Returns the html table\n\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    striped: true,\n    bordered: true,\n    hover: true,\n    class: \"sampleTable\",\n    id: \"table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"id\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Sample\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Color\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Comparison\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Tiff files\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"Marker\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"Label\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \"Thresholding\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, //Here the items are dynamically added to the table using map function\n  tableData.map(function (data, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, data.sample), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    }, data.color), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, data.comparison), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    }, data.tiffs), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, data.marker), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, data.labels), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, data.thresholds), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: function onClick(e) {\n        return deleteRow(index, e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }, \"Delete\")));\n  })));\n};\n\nexport default Table;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","Table","tableData","setTableData","deleteRow","index","e","sampleDel","filter","v","i","url","post","sample","then","response","data","console","log","map","color","comparison","tiffs","marker","labels","thresholds"],"sources":["/home/ernohanninen/simpli_project/App/src/sample_table.js"],"sourcesContent":["/*\nTitle: getResults.js\nDate: 2021-23-05\nAuthor: Erno Hänninen\nDescription:\n  - This scipt contains the table element where the samples are stored after submitting\n\nProcedure:\n - Map thru the input array and set the values to table\n - Remove elements from table after remove is clicked\n*/\n\n//Modules\nimport React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\n\n//Function which adds element to the table and removes them from there and from the file\nconst Table = (({tableData, setTableData}) => {\n\n    //Function is called if delete is called. Removes the corresponding sample row and the sample from the metadata file\n    const deleteRow = (index, e) =>{\n        let sampleDel = tableData[index][\"sample\"]\n        //Delete the sample from the table\n        setTableData(tableData.filter((v, i) => i !== index));\n\n        //Send request to the backend to delete the sample from metadata file\n        const url = '/deleteSample';\n        axios.post(url, {sample: sampleDel}).then((response) =>{ //Sending data in JSON format\n          if(response.data==\"error\"){ //If error\n            console.log(\"########ERROR########\")\n          }\n          else{ //IF everyting okay\n            console.log(\"READY\")\n          }\n        });\n    }\n\n    //Returns the html table\n    return(\n        \n        <table striped bordered hover class=\"sampleTable\" id =\"table\">\n                    <thead>\n                        <tr>\n                            <id>Id</id>\n                            <th>Sample</th>\n                            <th>Color</th>\n                            <th>Comparison</th>\n                            <th>Tiff files</th>\n                            <th>Marker</th>\n                            <th>Label</th>\n                            <th>Thresholding</th>\n\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { //Here the items are dynamically added to the table using map function\n                        tableData.map((data, index)=>{\n                            return(\n                                <tr key={index}>\n                                    <td>{index+1}</td>\n                                    <td>{data.sample}</td>\n                                    <td>{data.color}</td>\n                                    <td>{data.comparison}</td>\n                                    <td>{data.tiffs}</td>\n                                    <td>{data.marker}</td>\n                                    <td>{data.labels}</td> \n                                    <td>{data.thresholds}</td>                         \n\n                                    <td><button type=\"button\" onClick={(e)=>deleteRow(index,e)}>Delete</button></td>\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n            </table>\n    )\n})\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module"}