{"ast":null,"code":"import _asyncToGenerator from \"/home/ernohanninen/SIMPLIcity/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/ernohanninen/SIMPLIcity/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ernohanninen/SIMPLIcity/App/src/getSettings.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\nTitle: getSettings.js\nDate: 2021-09-01\nAuthor: Erno Hänninen\nDescription:\n  - Second page of the app \n  - Here the image analysis processes to be executed are selected\n\nProcedure:\n - Select the imaging platform\n - Select processes to run\n - Click next to proceed\n - Or remove to get back to the sample page\n\n\n*/\n//import libraries and css file\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css'; //Function which is called by clicking the next button of submit sample page\n\nvar GetSettings = forwardRef(function (props, ref) {\n  //function GetSettings(){\n  //State variables\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      instrument = _useState2[0],\n      setInstrument = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      area = _useState4[0],\n      setArea = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      segmentation = _useState6[0],\n      setSegmentation = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      identification = _useState8[0],\n      setIdentification = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      intensity = _useState10[0],\n      setIntensity = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cellArea = _useState12[0],\n      setCellArea = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      clustering = _useState14[0],\n      setClustering = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      thresholding = _useState16[0],\n      setThresholding = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      homoInteractions = _useState18[0],\n      setHomoInteractions = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      heteroInteractions = _useState20[0],\n      setHeteroInteractions = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      permutedInteractions = _useState22[0],\n      setPermutedInteractions = _useState22[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      submitSettings: function submitSettings() {\n        //function which submits the setting\n        //Create formdata which is the sended to the frontend\n        var formData = new FormData(); //Collect the input data\n\n        formData.append(\"instrument\", instrument);\n        formData.append(\"area\", area);\n        formData.append(\"segmentation\", segmentation);\n        formData.append(\"identification\", identification);\n        formData.append(\"intensity\", intensity);\n        formData.append(\"cellArea\", cellArea);\n        formData.append(\"clustering\", clustering);\n        formData.append(\"thresholding\", thresholding);\n        formData.append(\"homoInteractions\", homoInteractions);\n        formData.append(\"heteroInteractions\", heteroInteractions);\n        formData.append(\"permutedInteractions\", permutedInteractions); //Using axios to send the formdata to frontend\n\n        function submitData() {\n          return _submitData.apply(this, arguments);\n        }\n\n        function _submitData() {\n          _submitData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var response;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return axios({\n                      url: \"/submitSettings\",\n                      method: \"post\",\n                      data: formData\n                    });\n\n                  case 3:\n                    response = _context.sent;\n                    return _context.abrupt(\"return\", response.data);\n\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.log(_context.t0);\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 7]]);\n          }));\n          return _submitData.apply(this, arguments);\n        }\n\n        submitData().then(function (response) {\n          //Get the values from formData to more usable format\n          var newData = [];\n          var j = 0;\n\n          var _iterator = _createForOfIteratorHelper(formData.entries()),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var pair = _step.value;\n              newData[pair[0]] = pair[1];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      }\n    };\n  }); //Function which handels the changes in dropdown\n\n  var handleChangeSelectInstrument = function handleChangeSelectInstrument(event) {\n    setInstrument(event.target.value);\n  }; //Show instruction box\n\n\n  var showInstructions = function showInstructions(event) {\n    //setInfo()\n    document.getElementById(\"instructionsSettings\").style.display = \"block\";\n    document.getElementById(\"infoBtnSettings\").style.display = \"none\";\n    document.getElementById(\"hideInfoBtnSettings\").style.display = \"block\";\n  }; //Hide instruction box\n\n\n  var hideInstructions = function hideInstructions(event) {\n    document.getElementById(\"instructionsSettings\").style.display = \"none\";\n    document.getElementById(\"infoBtnSettings\").style.display = \"block\";\n    document.getElementById(\"hideInfoBtnSettings\").style.display = \"none\";\n  }; //The HTML elements which are rendered to the user\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"settingsForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"instrumentDropMenu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Image acquisition platform:\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"instrumentDropMenu\",\n    id: \"instrumentDropMenu\",\n    onChange: function onChange(event) {\n      return handleChangeSelectInstrument(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"select\",\n    selected: \"true\",\n    disabled: \"disabled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"operetta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"Operetta\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, \"Brightfield\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Select the processes to run:\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"infoBtnSettings\",\n    class: \"btn-instructions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: showInstructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Info\")), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true,\n    id: \"hideInfoBtnSettings\",\n    class: \"btn-instructions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: hideInstructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Hide Info\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, \"Image segmentation: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"segmentation\",\n    onChange: function onChange() {\n      return setSegmentation(!segmentation);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"Cell type identification: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"identification\",\n    onChange: function onChange() {\n      return setIdentification(!identification);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, \"Cell intensity measurements: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"intensity\",\n    onChange: function onChange() {\n      return setIntensity(!intensity);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Cell area measurements: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"cellArea\",\n    onChange: function onChange() {\n      return setCellArea(!cellArea);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true,\n    id: \"instructionsSettings\",\n    class: \"textarea-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    disabled: true,\n    readonly: true,\n    rows: \"20\",\n    cols: \"50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Instructions:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"Image acquisition platform: \"), \"If \\\"Operetta\\\" is selected as image acquisition platform the images not processed, if \\\"Brightfield\\\" is selected the images are noramlized, denoised and the contrast is adjusted\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 227\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"Image segmentation: \"), \"Deep learning segmentation. Cells from the background are segmented.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 112\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Cell type identification: \"), \"Identifies cells belonging to different populations or tissue compartments according to their overlap with regions of interest in the thresholded image.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 202\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Cell intensity measurements: \"), \"Computes pixel intensity distribution of segmented cells between two different groups.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 139\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"Cell area measurements: \"), \"Computes pixel counts and number of segmented cells. Enables analysis of cells expressing several markers\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 153\n    }\n  }))))));\n});\nexport default GetSettings;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","GetSettings","props","ref","instrument","setInstrument","area","setArea","segmentation","setSegmentation","identification","setIdentification","intensity","setIntensity","cellArea","setCellArea","clustering","setClustering","thresholding","setThresholding","homoInteractions","setHomoInteractions","heteroInteractions","setHeteroInteractions","permutedInteractions","setPermutedInteractions","submitSettings","formData","FormData","append","submitData","url","method","data","response","console","log","then","newData","j","entries","pair","handleChangeSelectInstrument","event","target","value","showInstructions","document","getElementById","style","display","hideInstructions"],"sources":["/home/ernohanninen/SIMPLIcity/App/src/getSettings.js"],"sourcesContent":["/*\nTitle: getSettings.js\nDate: 2021-09-01\nAuthor: Erno Hänninen\nDescription:\n  - Second page of the app \n  - Here the image analysis processes to be executed are selected\n\nProcedure:\n - Select the imaging platform\n - Select processes to run\n - Click next to proceed\n - Or remove to get back to the sample page\n\n\n*/\n\n//import libraries and css file\nimport React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\n//Function which is called by clicking the next button of submit sample page\nconst GetSettings = forwardRef((props, ref)=>{\n//function GetSettings(){\n\n    //State variables\n    const [instrument, setInstrument] = useState(\"\");\n    const [area, setArea] = useState(false);\n    const [segmentation, setSegmentation] = useState(false);\n    const [identification, setIdentification] = useState(false);\n    const [intensity, setIntensity] = useState(false);\n    const [cellArea, setCellArea] = useState(false);\n    const [clustering, setClustering] = useState(false);\n    const [thresholding, setThresholding] = useState(false);\n    const [homoInteractions, setHomoInteractions] = useState(false);\n    const [heteroInteractions, setHeteroInteractions] = useState(false);\n    const [permutedInteractions, setPermutedInteractions] = useState(false);\n    \n    useImperativeHandle(ref, ()=>({\n        submitSettings(){ //function which submits the setting\n            //Create formdata which is the sended to the frontend\n            const formData = new FormData()\n            //Collect the input data\n            formData.append(\"instrument\", instrument)\n            formData.append(\"area\", area)\n            formData.append(\"segmentation\", segmentation)\n            formData.append(\"identification\", identification)\n            formData.append(\"intensity\", intensity)\n            formData.append(\"cellArea\", cellArea)        \n            formData.append(\"clustering\", clustering)\n            formData.append(\"thresholding\", thresholding)\n            formData.append(\"homoInteractions\", homoInteractions)\n            formData.append(\"heteroInteractions\", heteroInteractions)\n            formData.append(\"permutedInteractions\", permutedInteractions)\n            \n            //Using axios to send the formdata to frontend\n            async function submitData(){\n                try {\n                    let response = await axios({\n                        url: \"/submitSettings\",\n                        method: \"post\",\n                        data: formData\n                    })\n\n                    return response.data\n                }\n                catch(err){\n                    console.log(err)\n                }\n            }\n        \n            submitData()\n            .then(function(response){\n                //Get the values from formData to more usable format\n                const newData = []   \n                let j = 0\n                for (const pair of formData.entries()) {\n                newData[pair[0]] = pair[1] \n                }\n            })    \n        }\n    }))\n\n    //Function which handels the changes in dropdown\n    const handleChangeSelectInstrument = (event) => {\n        setInstrument(event.target.value)\n    }\n\n    //Show instruction box\n    const showInstructions = event => {\n        //setInfo()\n        document.getElementById(\"instructionsSettings\").style.display=\"block\"\n        document.getElementById(\"infoBtnSettings\").style.display=\"none\"\n        document.getElementById(\"hideInfoBtnSettings\").style.display=\"block\"    \n      }\n    \n      //Hide instruction box\n      const hideInstructions = event =>{\n        document.getElementById(\"instructionsSettings\").style.display=\"none\"\n        document.getElementById(\"infoBtnSettings\").style.display=\"block\"\n        document.getElementById(\"hideInfoBtnSettings\").style.display=\"none\"\n      }\n\n\n    //The HTML elements which are rendered to the user\n    return(\n    <div>\n\n    <div>\n      \n      <form class=\"settingsForm\">\n\n        <div class=\"row\">\n        <label for=\"instrumentDropMenu\">Image acquisition platform:</label> \n        <select name=\"instrumentDropMenu\" id=\"instrumentDropMenu\" onChange={event => handleChangeSelectInstrument(event)}>\n                      <option value=\"select\" selected=\"true\" disabled=\"disabled\">Select</option>    \n                      <option value=\"operetta\">Operetta</option>\n                      <option value=\"other\">Brightfield</option>\n                      \n        </select>  \n        </div>\n\n        <br></br>\n        <div class=\"row\">\n            <div class=\"col-1\">\n                <b>Select the processes to run:</b>\n            </div>\n            <div class=\"col-2\">\n                <div id = \"infoBtnSettings\" class=\"btn-instructions\">  \n                        <button type=\"button\" onClick={showInstructions}>Info</button>\n                </div>  \n                <div  hidden id = \"hideInfoBtnSettings\" class=\"btn-instructions\">  \n                    <button type=\"button\" onClick={hideInstructions}>Hide Info</button>\n            </div>  \n            </div>\n        </div>\n\n       \n            \n            {/*<div class=\"checkbox\">   \n                  <p>Area measurements: </p>\n                  <input type = \"checkbox\" name=\"area\" onChange={()=>setArea(!area)}/>                \n\n             </div>*/}\n            <div class=\"checkbox\">    \n\n                  <p>Image segmentation: </p>\n                  <input type = \"checkbox\" name=\"segmentation\" onChange={()=>setSegmentation(!segmentation)}/>\n            </div>\n            <div class=\"checkbox\">    \n\n                  <p>Cell type identification: </p>\n              \n                  <input type = \"checkbox\" name=\"identification\" onChange={()=>setIdentification(!identification)}/>\n            \n            \n            </div>\n\n            <div class=\"checkbox\">    \n\n                  <p>Cell intensity measurements: </p>\n              \n                  <input type = \"checkbox\" name=\"intensity\" onChange={()=>setIntensity(!intensity)}/>\n            \n            \n            </div>\n            <div class=\"checkbox\">    \n\n                  <p>Cell area measurements: </p>\n              \n                  <input type = \"checkbox\" name=\"cellArea\" onChange={()=>setCellArea(!cellArea)}/>\n            \n            \n            </div>\n            \n\n            {/*<div class=\"checkbox\">    \n\n            <p>Cell clustering: </p>\n\n            <input type = \"checkbox\" name=\"clustering\" onChange={()=>setClustering(!clustering)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Cell thresholding: </p>\n\n            <input type = \"checkbox\" name=\"thresholding\" onChange={()=>setThresholding(!thresholding)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Homotypic interactions: </p>\n\n            <input type = \"checkbox\" name=\"homoInteractions\" onChange={()=>setHomoInteractions(!homoInteractions)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Heterotypic interactions: </p>\n\n            <input type = \"checkbox\" name=\"heteroInteractions\" onChange={()=>setHeteroInteractions(!heteroInteractions)}/>\n\n\n            </div>\n\n            <div class=\"checkbox\">    \n\n            <p>Permuted interactions: </p>\n\n            <input type = \"checkbox\" name=\"permutedInteractions\" onChange={()=>setPermutedInteractions(!permutedInteractions)}/>\n             \n            </div>*/}\n               \n\n            <div hidden id=\"instructionsSettings\" class=\"textarea-container\">    \n              <p disabled readonly rows=\"20\" cols=\"50\">\n                <b>Instructions:<br></br><br></br></b>\n                <b>Image acquisition platform: </b>If \"Operetta\" is selected as image acquisition platform the images not processed, if \"Brightfield\" is selected the images are noramlized, denoised and the contrast is adjusted<br></br> \n                <b>Image segmentation: </b>Deep learning segmentation. Cells from the background are segmented.<br></br>\n                <b>Cell type identification: </b>Identifies cells belonging to different populations or tissue compartments according to their overlap with regions of interest in the thresholded image.<br></br>\n                <b>Cell intensity measurements: </b>Computes pixel intensity distribution of segmented cells between two different groups.<br></br>\n                <b>Cell area measurements: </b>Computes pixel counts and number of segmented cells. Enables analysis of cells expressing several markers<br></br>\n              </p>        \n        </div>\n            \n       \n       </form>\n\n    </div>\n\n\n    </div>\n\n    )\n})\nexport default GetSettings;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}