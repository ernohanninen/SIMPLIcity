{"ast":null,"code":"import _toConsumableArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getResults.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nvar GetResults = function GetResults() {\n  //Variables\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      plotPaths = _useState2[0],\n      setPlotPaths = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      areaPlots = _useState4[0],\n      setAreaPlots = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sampleImages = _useState6[0],\n      setSampleImages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dropDown = _useState8[0],\n      setDropDown = _useState8[1];\n\n  var sample = \"\"; //Function which get the images from backend\n\n  var displayResults = function displayResults() {\n    document.getElementById(\"resultsButton\").style.display(\"none\");\n    axios.get(\"/fetchResults\").then(function (response) {\n      var data = response.data; //Return value is a dictinary\n      //Extracting values from dictionary\n\n      var samples = data[\"samples\"];\n      var area = data[\"area\"];\n      setPlotPaths(area);\n      displayImages(area, samples); //Calling function which displays the images         \n    });\n  }; //Function which displays the images to the user\n\n\n  var displayImages = function displayImages(area, samples) {\n    //Get the values for drop-down list\n    var optionItems = Object.entries(samples).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, key);\n    }); //Create the dropdown list\n\n    setDropDown( /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Quality control: \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"sampleSelector\",\n      id: \"sampleSelector\",\n      onChange: function onChange(event) {\n        return handleChangeSelect(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, \"None\"), optionItems)));\n    var displaySegmented = false;\n\n    if (Object.keys(samples).length === 3) {\n      displaySegmented = true;\n    }\n\n    console.log(displaySegmented); //Map samples and set the images to variable\n\n    setSampleImages(Object.entries(samples).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      return [].concat(_toConsumableArray(sampleImages), [/*#__PURE__*/React.createElement(\"div\", {\n        id: key,\n        hidden: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Preprocessed \", key), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../src/images/\" + value[0][\"preprocessed\"]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Thresholded \", key), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../src/images/\" + value[1][\"thresholded\"]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      })), displaySegmented ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Segmented \", key), /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"../src/images/\" + value[1][\"segmented\"]),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null))]);\n    })); //Set marker area plot\n\n    setAreaPlots( /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Measurement of marker positive area\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../src/images/\" + area),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    })));\n  }; //Handles changes in the sample drop-down list\n\n\n  var handleChangeSelect = function handleChangeSelect(event) {\n    //displays images/nothing depending of the selected drop-down value\n    if (event.target.value != \"None\") {\n      document.getElementById(event.target.value).style.display = \"block\";\n    } //Hides images depending of the value\n\n\n    if (sample != \"\" && sample != \"None\") {\n      document.getElementById(sample).style.display = \"none\";\n    }\n\n    sample = event.target.value;\n  }; //Display HTML to the user\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"resultsForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true,\n    id: \"load\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Running SIMPLI\")), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: true,\n    id: \"results\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"resultsButton\",\n    type: \"button\",\n    onClick: function onClick(event) {\n      return displayResults();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Display results\"), dropDown, sampleImages, areaPlots)));\n};\n\nexport default GetResults;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","GetResults","plotPaths","setPlotPaths","areaPlots","setAreaPlots","sampleImages","setSampleImages","dropDown","setDropDown","sample","displayResults","document","getElementById","style","display","get","then","response","data","samples","area","displayImages","optionItems","Object","entries","map","key","value","event","handleChangeSelect","displaySegmented","keys","length","console","log","require","target"],"sources":["/home/ernohanninen/simpli-app/src/getResults.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nconst GetResults = () => { \n    \n    //Variables\n    const [plotPaths, setPlotPaths] = useState(\"\")\n    const [areaPlots, setAreaPlots] = useState(\"\")\n    const [sampleImages, setSampleImages] = useState(\"\")\n    const [dropDown, setDropDown] = useState(\"\")\n    var sample = \"\"\n\n    //Function which get the images from backend\n    const displayResults = () => {\n        document.getElementById(\"resultsButton\").style.display(\"none\")\n        axios.get(\"/fetchResults\")\n        .then(function(response){\n           let data = response.data //Return value is a dictinary\n           //Extracting values from dictionary\n           let samples = data[\"samples\"]\n           let area = data[\"area\"]\n           setPlotPaths(area)    \n           displayImages(area, samples) //Calling function which displays the images         \n        })\n    }\n    //Function which displays the images to the user\n    const displayImages = (area, samples) => { \n        //Get the values for drop-down list\n        let optionItems = Object.entries(samples).map(([key,value]) => \n            <option value={key}>{key}</option>\n        )\n        //Create the dropdown list\n        setDropDown(\n        <div class=\"row\">\n            <p>Quality control: </p>\n            <select name=\"sampleSelector\" id=\"sampleSelector\" onChange={event => handleChangeSelect(event)}>\n                 <option selected=\"true\">None</option>  \n                 {optionItems}\n                  \n            </select>\n        </div>\n        )\n        let displaySegmented = false\n        if(Object.keys(samples).length === 3){\n            displaySegmented = true\n        }\n        console.log(displaySegmented)\n  \n        //Map samples and set the images to variable\n        setSampleImages(Object.entries(samples).map(([key,value]) => {\n            return([...sampleImages, \n            <div id = {key} hidden>\n                <div>\n                    <p>Preprocessed {key}</p>    \n                    <img src={require(\"../src/images/\" + value[0][\"preprocessed\"])}></img>\n                </div>\n                <div>\n                    <p>Thresholded {key}</p>\n                    <img src={require(\"../src/images/\" + value[1][\"thresholded\"])}></img>\n                </div>\n                {displaySegmented ? (\n                    <div>\n                        <p>Segmented {key}</p>\n                        <img src={require(\"../src/images/\" + value[1][\"segmented\"])}></img>         \n                    </div>                  \n                ):(<></>)\n                \n                }   \n            </div>])\n        }))\n\n        //Set marker area plot\n        setAreaPlots(\n            <div>\n                <p>Measurement of marker positive area</p>\n                <img src={require(\"../src/images/\" + area)}></img>\n            </div>\n        )\n    } \n    //Handles changes in the sample drop-down list\n    const handleChangeSelect = (event) => { \n        //displays images/nothing depending of the selected drop-down value\n        if(event.target.value != \"None\"){\n            document.getElementById(event.target.value).style.display = \"block\"\n        }\n        //Hides images depending of the value\n        if(sample != \"\" && sample != \"None\"){\n            document.getElementById(sample).style.display = \"none\"\n        }\n        sample = event.target.value      \n    }\n\n    //Display HTML to the user\n    return(\n        <div>\n            <form id=\"resultsForm\">\n                <div hidden id=\"load\">\n                    <p>Running SIMPLI</p>         \n                </div>\n                \n                <div hidden id=\"results\">    \n                    <button id=\"resultsButton\" type=\"button\" onClick={event => displayResults()}>Display results</button>\n                    {dropDown}\n                    {sampleImages}\n                    {areaPlots}\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default GetResults;"],"mappings":"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"},"metadata":{},"sourceType":"module"}