{"ast":null,"code":"import _toConsumableArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getMetadata.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { render, waitForElementToBeRemoved } from '@testing-library/react'; //import GetSettings from \"./getSettings.js\"\n\nvar GetMetadata = forwardRef(function (props, ref) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderArea = _useState2[0],\n      setRenderArea = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allMarkers = _useState4[0],\n      setAllMarkes = _useState4[1]; // const [inputFields, setInputFields] = useState([]);\n\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      samplesDict = _useState6[0],\n      setSamplesDict = _useState6[1];\n\n  var inputFields = [];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      markers = _useState8[0],\n      setMarkers = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      markerTextBox = _useState10[0],\n      setMarkerTextBox = _useState10[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      getProcesses: function getProcesses() {\n        console.log(\"AXIOS\");\n        axios.get(\"/submitSettings\").then(function (response) {\n          console.log(response);\n          console.log(response.data[0]);\n          console.log(response.data[1]);\n          console.log(response.data[2]);\n          setSamplesDict(response.data[1]);\n          setMarkers(response.data[2]); //setSamples(JSON.parse(response.data[1]))\n          //console.log(samples)\n          //console.log(typeof(samples))\n          //Parse values from response data to boolean format\n\n          for (var prop in response.data[0]) {\n            if (response.data[0].hasOwnProperty(prop)) {\n              response.data[0][prop] = response.data[0][prop] == 'true' || response.data[0][prop] == 'false' ? response.data[0][prop] === 'true' : response.data[0][prop];\n            }\n          } //Checkbox to Compute marker positive areas to all markers\n          //+ input fields to custom markers\n\n\n          if (response.data[0].execute_area == true) {\n            console.log(\"RENDER SOMETHING\");\n            console.log(allMarkers);\n            setRenderArea(true); //console.log(\"Render area \", renderArea)\n          } else if (response.data[0].execute_area == false) setRenderArea(false);\n\n          if (response.data[0].execute_sd_segmentation == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_type_identification == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_clustering == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_thresholding == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_homotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_heterotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_permuted_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          } //console.log(skip_area)\n          //console.log(response.data.skip_area)\n\n        });\n      },\n      submitMetadata: function submitMetadata() {\n        console.log(\"metadata\");\n        console.log(allMarkers);\n        console.log(\"getMETADATA\");\n      }\n    };\n  });\n\n  var allMarkersChecked = function allMarkersChecked() {\n    //inputFields = []\n    //console.log(\"INPUTFIELDS\", inputFields)\n    setAllMarkes(!allMarkers);\n    console.log(allMarkers);\n\n    if (allMarkers === false) {\n      console.log(\"checked\"); //Maps the key value pairs in samplesDict\n\n      /*Object.keys(samplesDict).forEach(function(key, index){\n          inputFields.push(samplesDict[key])\n          console.log(inputFields)\n          console.log(\"READY\")\n      })*/\n\n      console.log(\"ADDING THE input\");\n      setMarkerTextBox(markers.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          class: \"row\",\n          id: index,\n          value: item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"col-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          name: \"marker\",\n          value: item,\n          onChange: function onChange(event) {\n            return handleChangeInput(index, event);\n          },\n          size: \"10\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"col-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          name: \"mainMarker\",\n          value: item,\n          onChange: function onChange(event) {\n            return handleChangeInput(index, event);\n          },\n          size: \"10\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"col-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          disabled: markerTextBox.length === 1,\n          onClick: function onClick() {\n            return removeMarker(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }\n        }, \"Remove\")));\n      }));\n      console.log(\"Input added\");\n    }\n  };\n\n  var addMarkers = function addMarkers(event) {\n    console.log(markerTextBox.length);\n    console.log(typeof markerTextBox); //THe div doesn't have a value\n    //Removing this doesn't work\n\n    setMarkerTextBox([].concat(_toConsumableArray(markerTextBox), [/*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      id: markerTextBox.length + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"marker\",\n      onChange: function onChange(event) {\n        return handleChangeInput(markerTextBox.length + 1, event);\n      },\n      size: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"mainMarker\",\n      onChange: function onChange(event) {\n        return handleChangeInput(markerTextBox.length + 1, event);\n      },\n      size: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: markerTextBox.length === 1,\n      onChange: function onChange(event) {\n        return removeMarker(markerTextBox.length + 1, event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Remove\")))]));\n  };\n\n  var removeMarker = function removeMarker(id, event) {\n    var value = document.getElementById(id).getAttribute(\"value\");\n    console.log(value);\n    console.log(markers);\n    var index = markers.indexOf(value);\n\n    if (index >= 0) {\n      markers.splice(index, 1);\n    }\n\n    console.log(markers);\n    /*console.log(\"DELETE\")\n    console.log(samplesDict)\n    for(var key in samplesDict){\n        if(samplesDict[key] == value){\n            //let k = samplesDict[value]\n            console.log(key)\n            delete samplesDict[key]\n        }\n    }\n    \n    console.log(samplesDict)\n    document.getElementById(id).remove()*/\n  };\n\n  var handleChangeInput = function handleChangeInput(id, event) {\n    /**const newInputFields = inputFields.map(i => {\n      if(id === i.id) {\n        console.log(event.target.name)\n      }      \n      return i;\n    })   */\n    //setInputFields(newInputFields);  \n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"metadataForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Submit metadata:\"), renderArea ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, \"Select all markers: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"cbAreas\",\n    onChange: function onChange() {\n      return allMarkersChecked();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  })), allMarkers ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, \"Marker\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, \"Main marker\"))), markerTextBox, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addMarkers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \"Add markers\")) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, \"Marker\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"marker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, \"Main marker\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"main_marker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }))))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n});\nexport default GetMetadata; //<div>{allMarkers && <p>Loading...</p>}</div>#setAllMarkes(!allMarkers);","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","v4","uuidv4","render","waitForElementToBeRemoved","GetMetadata","props","ref","renderArea","setRenderArea","allMarkers","setAllMarkes","samplesDict","setSamplesDict","inputFields","markers","setMarkers","markerTextBox","setMarkerTextBox","getProcesses","console","log","get","then","response","data","prop","hasOwnProperty","execute_area","execute_sd_segmentation","execute_cell_type_identification","execute_cell_clustering","execute_cell_thresholding","execute_homotypic_interactions","execute_heterotypic_interactions","execute_permuted_interactions","submitMetadata","allMarkersChecked","map","item","index","event","handleChangeInput","length","removeMarker","addMarkers","id","value","document","getElementById","getAttribute","indexOf","splice"],"sources":["/home/ernohanninen/simpli-app/src/getMetadata.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { render, waitForElementToBeRemoved } from '@testing-library/react';\n//import GetSettings from \"./getSettings.js\"\n\n\nconst GetMetadata = forwardRef((props, ref)=>{\n\n    const [renderArea, setRenderArea] = useState(false)\n    const [allMarkers, setAllMarkes]  = useState(false)\n   // const [inputFields, setInputFields] = useState([]);\n    const [samplesDict, setSamplesDict] = useState({})\n    let inputFields = []\n    const [markers, setMarkers] = useState([])\n    const [markerTextBox, setMarkerTextBox] = useState(\"\")\n\n    useImperativeHandle(ref, ()=>({\n        getProcesses(){\n            console.log(\"AXIOS\")\n            axios.get(\"/submitSettings\")\n            .then(function(response){\n\n                console.log(response)\n                console.log(response.data[0])\n                console.log(response.data[1])\n                console.log(response.data[2])\n                setSamplesDict(response.data[1])\n\n                setMarkers(response.data[2])\n\n                \n                //setSamples(JSON.parse(response.data[1]))\n                //console.log(samples)\n                //console.log(typeof(samples))\n                //Parse values from response data to boolean format\n                for (let prop in response.data[0]) {\n                    if (response.data[0].hasOwnProperty(prop)) {\n                        response.data[0][prop] = (response.data[0][prop] == 'true' || response.data[0][prop] == 'false')? response.data[0][prop] === 'true': response.data[0][prop] ;\n                    }\n                } \n                //Checkbox to Compute marker positive areas to all markers\n                //+ input fields to custom markers\n                if(response.data[0].execute_area == true){\n\n                    console.log(\"RENDER SOMETHING\")\n                    console.log(allMarkers)\n                    setRenderArea(true)\n                    //console.log(\"Render area \", renderArea)\n\n                }\n                else if(response.data[0].execute_area == false)setRenderArea(false)\n                \n                if(response.data[0].execute_sd_segmentation == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_type_identification == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_clustering == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_thresholding == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_homotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_heterotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_permuted_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                \n                //console.log(skip_area)\n                //console.log(response.data.skip_area)\n            })\n        },\n        submitMetadata(){\n\n            console.log(\"metadata\")\n            console.log(allMarkers)\n\n            console.log(\"getMETADATA\")\n        }\n    }))\n\n \n    \n\n\n    const allMarkersChecked = () => {\n\n        //inputFields = []\n        \n        //console.log(\"INPUTFIELDS\", inputFields)\n\n        setAllMarkes(!allMarkers)\n        console.log(allMarkers)\n        if(allMarkers === false){\n            console.log(\"checked\")\n        \n        \n        //Maps the key value pairs in samplesDict\n        /*Object.keys(samplesDict).forEach(function(key, index){\n            inputFields.push(samplesDict[key])\n            console.log(inputFields)\n            console.log(\"READY\")\n        })*/\n        console.log(\"ADDING THE input\")\n        setMarkerTextBox(markers.map((item,index) => \n        <div class=\"row\" id={index} value={item}>\n                <div class=\"col-1\">    \n                    <input name=\"marker\" value={item} onChange={event => handleChangeInput(index,event)} size=\"10\"/>                \n                </div>\n                <div class=\"col-2\">    \n                    <input name=\"mainMarker\" value={item} onChange={event => handleChangeInput(index,event)} size=\"10\"/>                \n                </div>\n                <div class=\"col-3\">\n                    <button disabled={markerTextBox.length === 1} onClick={() => removeMarker(index)}>Remove</button>\n                \n                 </div>  \n\n\n            </div>\n        ))\n        console.log(\"Input added\")\n    }\n       \n        \n    }\n\n    const addMarkers = event =>{\n        console.log(markerTextBox.length)\n        console.log(typeof(markerTextBox))\n        //THe div doesn't have a value\n        //Removing this doesn't work\n        setMarkerTextBox([...markerTextBox,\n        <div class=\"row\" id={markerTextBox.length+1}>\n            <div class=\"col-1\">    \n                <input name=\"marker\" onChange={event => handleChangeInput(markerTextBox.length+1,event)} size=\"10\"/>                \n            </div>\n            <div class=\"col-2\">    \n                <input name=\"mainMarker\" onChange={event => handleChangeInput(markerTextBox.length+1,event)} size=\"10\"/>                \n            </div>\n            <div class=\"col-3\">\n                <button disabled={markerTextBox.length === 1} onChange={event => removeMarker(markerTextBox.length+1, event)}>Remove</button>        \n            </div> \n\n        </div>\n        ])\n            \n    }\n\n    const removeMarker = (id, event) => {\n       \n        let value = document.getElementById(id).getAttribute(\"value\")\n\n        console.log(value)\n        console.log(markers)\n        var index = markers.indexOf(value)\n        if(index >=0){\n            markers.splice(index,1)\n        }\n        \n        console.log(markers)\n        /*console.log(\"DELETE\")\n        console.log(samplesDict)\n        for(var key in samplesDict){\n            if(samplesDict[key] == value){\n                //let k = samplesDict[value]\n                console.log(key)\n                delete samplesDict[key]\n            }\n        }\n        \n        console.log(samplesDict)\n        document.getElementById(id).remove()*/\n\n        \n    }\n\n    const handleChangeInput = (id, event) => {\n        /**const newInputFields = inputFields.map(i => {\n          if(id === i.id) {\n            console.log(event.target.name)\n          }      \n          return i;\n        })   */\n        //setInputFields(newInputFields);  \n      }\n\n    return(\n        <div>\n            <form class=\"metadataForm\">\n                <b>Submit metadata:</b>\n                {renderArea ? (\n                    \n                    <div>\n                        <p>Area</p>\n                            <div class = \"checkbox\" >\n\n                            <p>Select all markers: </p>\n                                <input type = \"checkbox\" name=\"cbAreas\" onChange={() => allMarkersChecked()}/>\n                        </div>\n                        {allMarkers ? (\n                           <div>\n                            <div class=\"row\">\n                                <div class=\"col-1\">    \n                                    <p>Marker</p>\n                                </div>\n                                <div class=\"col-2\">    \n                                    <p>Main marker</p>\n\n                            </div>\n                \n                            </div>\n                            {markerTextBox}\n\n                            <button type=\"button\" onClick={addMarkers}>Add markers</button>\n\n                            </div>\n                            \n\n                         ):(\n                            <React.Fragment>\n                                \n                                <div class=\"row\">\n                                <div class=\"col-1\">    \n                                    <p>Marker</p>\n                                    <input name=\"marker\"/>                \n                                </div>\n                                <div class=\"col-2\">    \n                                    <p>Main marker</p>\n                                    <input name=\"main_marker\"/>\n                                </div>\n                                </div>\n\n                            </React.Fragment>\n                            \n\n                         )}\n\n                    </div>\n                    \n                   \n                            \n                ):(<></>)}\n                \n\n          \n            </form>\n        </div>\n    \n        )\n   \n})\nexport default GetMetadata;\n//<div>{allMarkers && <p>Loading...</p>}</div>#setAllMarkes(!allMarkers);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}