{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getMetadata.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css'; //import GetSettings from \"./getSettings.js\"\n\nvar GetMetadata = forwardRef(function (props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      getProcesses: function getProcesses() {\n        axios.get(\"/submitSettings\").then(function (response) {\n          console.log(response);\n          console.log(response.data[0]);\n          console.log(response.data[1]); //Parse values from response data to boolean format\n\n          for (var prop in response.data[0]) {\n            if (response.data[0].hasOwnProperty(prop)) {\n              response.data[0][prop] = response.data[0][prop] == 'true' || response.data[0][prop] == 'false' ? response.data[0][prop] === 'true' : response.data[0][prop];\n            }\n          } //Checkbox to Compute marker positive areas to all markers\n          //+ input fields to custom markers\n\n\n          if (response.data[0].execute_area == true) {\n            console.log(\"RENDER SOMETHING\");\n            return /*#__PURE__*/React.createElement(\"h\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 28\n              }\n            }, \"area\");\n          }\n\n          if (response.data[0].execute_sd_segmentation == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_type_identification == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_clustering == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_thresholding == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_homotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_heterotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_permuted_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          } //console.log(skip_area)\n          //console.log(response.data.skip_area)\n\n        });\n      },\n      submitMetadata: function submitMetadata() {\n        console.log(\"metadata\");\n        console.log(\"getMETADATA\");\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"metadataForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Select the processes to run:\"), /*#__PURE__*/React.createElement(\"h\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Hello\")));\n});\nexport default GetMetadata;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","GetMetadata","props","ref","getProcesses","get","then","response","console","log","data","prop","hasOwnProperty","execute_area","execute_sd_segmentation","execute_cell_type_identification","execute_cell_clustering","execute_cell_thresholding","execute_homotypic_interactions","execute_heterotypic_interactions","execute_permuted_interactions","submitMetadata"],"sources":["/home/ernohanninen/simpli-app/src/getMetadata.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\n//import GetSettings from \"./getSettings.js\"\n\n\nconst GetMetadata = forwardRef((props, ref)=>{\n\n    useImperativeHandle(ref, ()=>({\n        getProcesses(){\n            axios.get(\"/submitSettings\")\n            .then(function(response){\n                console.log(response)\n                console.log(response.data[0])\n                console.log(response.data[1])\n\n                //Parse values from response data to boolean format\n                for (let prop in response.data[0]) {\n                    if (response.data[0].hasOwnProperty(prop)) {\n                        response.data[0][prop] = (response.data[0][prop] == 'true' || response.data[0][prop] == 'false')? response.data[0][prop] === 'true': response.data[0][prop] ;\n                    }\n                } \n                //Checkbox to Compute marker positive areas to all markers\n                //+ input fields to custom markers\n                if(response.data[0].execute_area == true){\n                    console.log(\"RENDER SOMETHING\")\n                    return <h>area</h>\n\n                }\n                if(response.data[0].execute_sd_segmentation == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_type_identification == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_clustering == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_thresholding == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_homotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_heterotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_permuted_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                \n                //console.log(skip_area)\n                //console.log(response.data.skip_area)\n            })\n        },\n        submitMetadata(){\n\n            console.log(\"metadata\")\n            \n\n            console.log(\"getMETADATA\")\n        }\n    }))\n \n    return(\n        <div>\n            <form class=\"metadataForm\">\n                <b>Select the processes to run:</b>\n\n                <h>Hello</h>\n          \n            </form>\n        </div>\n    \n        )\n   \n})\nexport default GetMetadata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}