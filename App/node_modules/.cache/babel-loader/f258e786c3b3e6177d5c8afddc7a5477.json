{"ast":null,"code":"import _objectSpread from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getMetadata.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { render, waitForElementToBeRemoved } from '@testing-library/react'; //import GetSettings from \"./getSettings.js\"\n//If no markers prevent user to go forward\n\nvar GetMetadata = forwardRef(function (props, ref) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderArea = _useState2[0],\n      setRenderArea = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allMarkers = _useState4[0],\n      setAllMarkes = _useState4[1]; // const [inputFields, setInputFields] = useState([]);\n\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      markersDict = _useState6[0],\n      setMarkersDict = _useState6[1];\n\n  var inputFields = [];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      markers = _useState8[0],\n      setMarkers = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      originalMarkers = _useState10[0],\n      setOriginalMarkers = _useState10[1]; //This list keeps in track about the markers that the user inputted\n\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      markerTextBox = _useState12[0],\n      setMarkerTextBox = _useState12[1]; //let originalMarkers = []\n\n\n  useImperativeHandle(ref, function () {\n    return {\n      getProcesses: function getProcesses() {\n        console.log(\"AXIOS\");\n        axios.get(\"/submitSettings\").then(function (response) {\n          setMarkersDict(response.data[1]); //setMarkers(response.data[2])\n\n          setOriginalMarkers(response.data[2]); //setSamples(JSON.parse(response.data[1]))\n          //console.log(samples)\n          //console.log(typeof(samples))\n          //Parse values from response data to boolean format\n\n          for (var prop in response.data[0]) {\n            if (response.data[0].hasOwnProperty(prop)) {\n              response.data[0][prop] = response.data[0][prop] == 'true' || response.data[0][prop] == 'false' ? response.data[0][prop] === 'true' : response.data[0][prop];\n            }\n          } //Checkbox to Compute marker positive areas to all markers\n          //+ input fields to custom markers\n\n\n          if (response.data[0].execute_area == true) {\n            setRenderArea(true); //console.log(\"Render area \", renderArea)\n          } else if (response.data[0].execute_area == false) setRenderArea(false);\n\n          if (response.data[0].execute_sd_segmentation == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_type_identification == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_clustering == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_cell_thresholding == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_homotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_heterotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data[0].execute_permuted_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          } //console.log(skip_area)\n          //console.log(response.data.skip_area)\n\n        });\n      },\n      submitMetadata: function submitMetadata() {\n        console.log(\"metadata\");\n        console.log(allMarkers);\n        console.log(\"getMETADATA\");\n      }\n    };\n  });\n\n  var allMarkersChecked = function allMarkersChecked() {\n    setAllMarkes(!allMarkers);\n\n    if (allMarkers === false) {\n      console.log(\"checked\"); //Maps the key value pairs in samplesDict\n\n      /*Object.keys(samplesDict).forEach(function(key, index){\n          inputFields.push(samplesDict[key])\n          console.log(inputFields)\n          console.log(\"READY\")\n      })*/\n\n      console.log(\"SETTING MARKERS\");\n      {\n        console.log(originalMarkers);\n      }\n      var counter = 0;\n      console.log(markersDict);\n      console.log(markerTextBox); //setMarkerTextBox(Object.keys(markersDict).forEach(function(key, index){\n\n      setMarkerTextBox(Object.entries(markersDict).map(function (key, index) {\n        {\n          console.log(key);\n        }\n        {\n          console.log(index);\n        }\n        {\n          console.log(markersDict[key]);\n        }\n\n        if (originalMarkers.includes(key)) {\n          console.log(\"INCLUDES\");\n          return /*#__PURE__*/React.createElement(\"div\", {\n            class: \"row\",\n            id: index,\n            value: key,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            class: \"col-1\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            name: \"marker\",\n            value: key,\n            editable: false,\n            size: \"10\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            class: \"col-2\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            name: \"mainMarker\",\n            value: key,\n            editable: false,\n            size: \"10\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            class: \"col-3\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            onClick: function onClick() {\n              return removeMarker(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }\n          }, \"Remove\")));\n        }\n      }));\n      console.log(markerTextBox);\n    }\n  };\n\n  var addMarkers = function addMarkers(event) {\n    console.log(markerTextBox.length);\n    console.log(typeof markerTextBox); //THe div doesn't have a value\n    //Removing this doesn't work\n\n    setMarkerTextBox([].concat(_toConsumableArray(markerTextBox), [/*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      id: markerTextBox.length + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"marker\",\n      id: 0 - markerTextBox.length,\n      onBlur: function onBlur(event) {\n        return handleChangeInput(markerTextBox.length + 1, event);\n      },\n      size: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"mainMarker\",\n      size: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return removeMarker(markerTextBox.length + 1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Remove\")))]));\n  };\n\n  var removeMarker = function removeMarker(id) {\n    var key = document.getElementById(id).getAttribute(\"value\");\n    delete markersDict[key];\n    document.getElementById(id).remove();\n    console.log(markersDict); //let value = document.getElementById(0-markerTextBox.length).value\n\n    /*console.log(value)\n    console.log(markers)\n    var index = markers.indexOf(value)\n    if(index >=0){\n        markers.splice(index,1)\n    }\n    \n    console.log(markers)\n    document.getElementById(id).remove()*/\n  };\n\n  var handleChangeInput = function handleChangeInput(id, event) {\n    console.log(event.target.value);\n    var inputMarkers = [];\n    var inputString = event.target.value.replace(/\\s/g, \"\");\n    var marker = inputString; //let marker = event.target.value\n\n    console.log(marker); //Checks the logical operators the user inputted\n\n    if (marker.includes(\"&\") || marker.includes(\"|\") || marker.includes(\"!\")) {\n      inputMarkers = marker.split(/[&!|]+/);\n      console.log(inputMarkers);\n    } else {\n      inputMarkers.push(marker);\n    }\n\n    var inputError = false;\n\n    for (var elem in inputMarkers) {\n      if (originalMarkers.includes(inputMarkers[elem])) {\n        inputError = false;\n      } else {\n        inputError = true;\n        break;\n      }\n    }\n\n    console.log(\"Original MArkers\", originalMarkers);\n\n    if (inputError === false) {\n      setMarkersDict(_objectSpread({}, markersDict, {\n        inputString: \"\"\n      }));\n    } else if (inputError === true) {\n      alert(\"ERROR: input \" + inputString + \" couldn't be processed, please change the input format\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"metadataForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"Submit metadata:\"), renderArea ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, \"Select all markers: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"cbAreas\",\n    onChange: function onChange() {\n      return allMarkersChecked();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  })), allMarkers ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, \"Marker\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, \"Main marker\"))), markerTextBox, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addMarkers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, \"Add markers\")) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }, \"Marker\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"marker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, \"Main marker\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"main_marker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }))))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n});\nexport default GetMetadata; //<div>{allMarkers && <p>Loading...</p>}</div>#setAllMarkes(!allMarkers);","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","v4","uuidv4","render","waitForElementToBeRemoved","GetMetadata","props","ref","renderArea","setRenderArea","allMarkers","setAllMarkes","markersDict","setMarkersDict","inputFields","markers","setMarkers","originalMarkers","setOriginalMarkers","markerTextBox","setMarkerTextBox","getProcesses","console","log","get","then","response","data","prop","hasOwnProperty","execute_area","execute_sd_segmentation","execute_cell_type_identification","execute_cell_clustering","execute_cell_thresholding","execute_homotypic_interactions","execute_heterotypic_interactions","execute_permuted_interactions","submitMetadata","allMarkersChecked","counter","Object","entries","map","key","index","includes","removeMarker","addMarkers","event","length","handleChangeInput","id","document","getElementById","getAttribute","remove","target","value","inputMarkers","inputString","replace","marker","split","push","inputError","elem","alert"],"sources":["/home/ernohanninen/simpli-app/src/getMetadata.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { render, waitForElementToBeRemoved } from '@testing-library/react';\n//import GetSettings from \"./getSettings.js\"\n\n\n\n//If no markers prevent user to go forward\n\nconst GetMetadata = forwardRef((props, ref)=>{\n\n    const [renderArea, setRenderArea] = useState(false)\n    const [allMarkers, setAllMarkes]  = useState(false)\n   // const [inputFields, setInputFields] = useState([]);\n    const [markersDict, setMarkersDict] = useState({})\n    let inputFields = []\n    const [markers, setMarkers] = useState([])\n\n    const [originalMarkers, setOriginalMarkers] = useState([]) //This list keeps in track about the markers that the user inputted\n    const [markerTextBox, setMarkerTextBox] = useState(\"\")\n    //let originalMarkers = []\n    useImperativeHandle(ref, ()=>({\n        getProcesses(){\n            console.log(\"AXIOS\")\n            axios.get(\"/submitSettings\")\n            .then(function(response){\n\n                setMarkersDict(response.data[1])\n                //setMarkers(response.data[2])\n                setOriginalMarkers(response.data[2])\n                \n                //setSamples(JSON.parse(response.data[1]))\n                //console.log(samples)\n                //console.log(typeof(samples))\n                //Parse values from response data to boolean format\n                for (let prop in response.data[0]) {\n                    if (response.data[0].hasOwnProperty(prop)) {\n                        response.data[0][prop] = (response.data[0][prop] == 'true' || response.data[0][prop] == 'false')? response.data[0][prop] === 'true': response.data[0][prop] ;\n                    }\n                } \n                //Checkbox to Compute marker positive areas to all markers\n                //+ input fields to custom markers\n                if(response.data[0].execute_area == true){\n                    setRenderArea(true)\n                    //console.log(\"Render area \", renderArea)\n                }\n                else if(response.data[0].execute_area == false)setRenderArea(false)\n                \n                if(response.data[0].execute_sd_segmentation == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_type_identification == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_clustering == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_cell_thresholding == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_homotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_heterotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data[0].execute_permuted_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                \n                //console.log(skip_area)\n                //console.log(response.data.skip_area)\n            })\n        },\n        submitMetadata(){\n\n            console.log(\"metadata\")\n            console.log(allMarkers)\n\n            console.log(\"getMETADATA\")\n        }\n    }))\n\n \n    \n\n\n    const allMarkersChecked = () => {\n        setAllMarkes(!allMarkers)\n        \n        if(allMarkers === false){\n            console.log(\"checked\")\n        \n        \n        //Maps the key value pairs in samplesDict\n        /*Object.keys(samplesDict).forEach(function(key, index){\n            inputFields.push(samplesDict[key])\n            console.log(inputFields)\n            console.log(\"READY\")\n        })*/\n\n        console.log(\"SETTING MARKERS\")\n        {console.log(originalMarkers)}\n        let counter = 0\n        console.log(markersDict)\n        console.log(markerTextBox)\n        //setMarkerTextBox(Object.keys(markersDict).forEach(function(key, index){\n            \n        setMarkerTextBox(Object.entries(markersDict).map((key,index) => {\n            {console.log(key)}\n            {console.log(index)}\n            {console.log(markersDict[key])}\n            if(originalMarkers.includes(key)){\n                console.log(\"INCLUDES\")\n                return(<div class=\"row\" id={index} value={key}>\n                    <div class=\"col-1\">    \n                        <input name=\"marker\" value={key} editable={false} size=\"10\"/>                \n                    </div>\n                    <div class=\"col-2\">    \n                        <input name=\"mainMarker\" value={key} editable={false} size=\"10\"/>                \n                    </div>\n                    <div class=\"col-3\">\n                        <button onClick={() => removeMarker(index)}>Remove</button>\n                    \n                     </div>  \n    \n    \n                </div>)      \n            }       \n        }\n        \n        ))\n        console.log(markerTextBox)\n\n    }\n            \n    }\n\n    const addMarkers = event =>{\n        console.log(markerTextBox.length)\n        console.log(typeof(markerTextBox))\n        //THe div doesn't have a value\n        //Removing this doesn't work\n        setMarkerTextBox([...markerTextBox,\n        <div class=\"row\" id={markerTextBox.length+1}>\n            <div class=\"col-1\">    \n                <input name=\"marker\"  id={0-markerTextBox.length} onBlur={event => handleChangeInput(markerTextBox.length+1,event)} size=\"10\"/>                \n            </div>\n            <div class=\"col-2\">    \n                <input name=\"mainMarker\"  size=\"10\"/>                \n            </div>\n            <div class=\"col-3\">\n                <button onClick={() => removeMarker(markerTextBox.length+1)}>Remove</button>        \n            </div> \n\n        </div>\n        ])\n            \n    }\n\n    const removeMarker = (id) => {\n\n        let key = document.getElementById(id).getAttribute(\"value\")\n        delete markersDict[key]\n        document.getElementById(id).remove()\n        console.log(markersDict)\n\n        //let value = document.getElementById(0-markerTextBox.length).value\n\n        /*console.log(value)\n        console.log(markers)\n        var index = markers.indexOf(value)\n        if(index >=0){\n            markers.splice(index,1)\n        }\n        \n        console.log(markers)\n        document.getElementById(id).remove()*/\n\n        \n    }\n\n    const handleChangeInput = (id, event) => {\n        console.log(event.target.value)\n\n        let inputMarkers = []\n        let inputString = event.target.value.replace(/\\s/g, \"\")\n        let marker = inputString\n        //let marker = event.target.value\n        console.log(marker)\n        //Checks the logical operators the user inputted\n        if(marker.includes(\"&\") || marker.includes(\"|\") || marker.includes(\"!\")){\n            inputMarkers = marker.split(/[&!|]+/)\n            console.log(inputMarkers)          \n        }\n        else{\n            inputMarkers.push(marker)\n        }\n        let inputError = false\n        for(let elem in inputMarkers){\n            if(originalMarkers.includes(inputMarkers[elem])){\n                inputError = false\n            }\n            else{\n                inputError = true\n                break;\n            }\n        }\n        console.log(\"Original MArkers\", originalMarkers)\n\n        if(inputError === false){\n            setMarkersDict({...markersDict,inputString:\"\"})\n        }\n        else if(inputError === true){\n            alert(\"ERROR: input \" + inputString + \" couldn't be processed, please change the input format\")\n\n        }\n \n      }\n\n    return(\n        <div>\n            <form class=\"metadataForm\">\n                <b>Submit metadata:</b>\n                {renderArea ? (\n                    \n                    <div>\n                        <p>Area</p>\n                            <div class = \"checkbox\" >\n\n                            <p>Select all markers: </p>\n                                <input type = \"checkbox\" name=\"cbAreas\" onChange={() => allMarkersChecked()}/>\n                        </div>\n                        {allMarkers ? (\n                           <div>\n                            <div class=\"row\">\n                                <div class=\"col-1\">    \n                                    <p>Marker</p>\n                                </div>\n                                <div class=\"col-2\">    \n                                    <p>Main marker</p>\n\n                            </div>\n                \n                            </div>\n                            {markerTextBox}\n\n                            <button type=\"button\" onClick={addMarkers}>Add markers</button>\n\n                            </div>\n                            \n\n                         ):(\n                            <React.Fragment>\n                                \n                                <div class=\"row\">\n                                <div class=\"col-1\">    \n                                    <p>Marker</p>\n                                    <input name=\"marker\"/>                \n                                </div>\n                                <div class=\"col-2\">    \n                                    <p>Main marker</p>\n                                    <input name=\"main_marker\"/>\n                                </div>\n                                </div>\n\n                            </React.Fragment>\n                            \n\n                         )}\n\n                    </div>\n                    \n                   \n                            \n                ):(<></>)}\n                \n\n          \n            </form>\n        </div>\n    \n        )\n   \n})\nexport default GetMetadata;\n//<div>{allMarkers && <p>Loading...</p>}</div>#setAllMarkes(!allMarkers);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}