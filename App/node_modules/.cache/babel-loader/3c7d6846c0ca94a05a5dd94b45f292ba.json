{"ast":null,"code":"import _slicedToArray from \"/home/ernohanninen/simpli-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ernohanninen/simpli-app/src/getSettings.js\";\nimport React, { useState } from 'react'; //import { MDBTable, MDBTableHead, MDBTableBody } from 'mdb-react-ui-kit';\n\nvar handleSubmit = function handleSubmit(event) {\n  event.preventDefault();\n};\n\nfunction getSettings() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      area = _useState2[0],\n      setArea = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      segmentation = _useState4[0],\n      setSegmentation = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      identification = _useState6[0],\n      setIdentification = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clustering = _useState8[0],\n      setClustering = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      thresholding = _useState10[0],\n      setThresholding = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      homoInteractions = _useState12[0],\n      setHomoInteractions = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      heteroInteractions = _useState14[0],\n      setHeteroInteractions = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      permutedInteractions = _useState16[0],\n      setPermutedInteractions = _useState16[1];\n\n  console.log(\"==================================0\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"settingsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Select the processes to run:\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, \"Area measurements: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"sample\",\n    onChange: function onChange(e) {\n      return setArea(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"Image segmentation: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"color\",\n    onChange: function onChange(e) {\n      return setSegmentation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Cell type identification: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setIdentification(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Cell clustering: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setClustering(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Cell thresholding: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setIdentification(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Homotypic interactions: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setIdentification(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Heterotypic interactions: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setIdentification(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Permuted interactions: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"comparison\",\n    onChange: function onChange(e) {\n      return setIdentification(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default getSettings;","map":{"version":3,"names":["React","useState","handleSubmit","event","preventDefault","getSettings","area","setArea","segmentation","setSegmentation","identification","setIdentification","clustering","setClustering","thresholding","setThresholding","homoInteractions","setHomoInteractions","heteroInteractions","setHeteroInteractions","permutedInteractions","setPermutedInteractions","console","log","e","target","value"],"sources":["/home/ernohanninen/simpli-app/src/getSettings.js"],"sourcesContent":["import React,  { useState } from 'react';\n//import { MDBTable, MDBTableHead, MDBTableBody } from 'mdb-react-ui-kit';\n\nconst handleSubmit = event => {\n    event.preventDefault();    \n\n}\nfunction getSettings(){\n\n    const [area, setArea] = useState(\"\");\n    const [segmentation, setSegmentation] = useState(\"\");\n    const [identification, setIdentification] = useState(\"\");\n    const [clustering, setClustering] = useState(\"\");\n    const [thresholding, setThresholding] = useState(\"\");\n    const [homoInteractions, setHomoInteractions] = useState(\"\");\n    const [heteroInteractions, setHeteroInteractions] = useState(\"\");\n    const [permutedInteractions, setPermutedInteractions] = useState(\"\");\n    \n\n\n    console.log(\"==================================0\")\n    return(\n    <div>\n\n    <div id=\"settingsPage\">\n      \n      <form  onSubmit={handleSubmit}>\n        <p>Select the processes to run:</p>\n\n            <div class=\"checkbox\">    \n                  <p>Area measurements: </p>\n                  <input type = \"checkbox\" name=\"sample\" onChange={(e)=>setArea(e.target.value)}/>                \n\n            </div>\n            <div class=\"checkbox\">    \n\n                  <p>Image segmentation: </p>\n                  <input type = \"checkbox\" name=\"color\" onChange={(e)=>setSegmentation(e.target.value)}/>\n            </div>\n            <div class=\"checkbox\">    \n\n                  <p>Cell type identification: </p>\n              \n                  <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setIdentification(e.target.value)}/>\n            \n            \n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Cell clustering: </p>\n\n            <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setClustering(e.target.value)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Cell thresholding: </p>\n\n            <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setIdentification(e.target.value)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Homotypic interactions: </p>\n\n            <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setIdentification(e.target.value)}/>\n\n\n            </div>\n            <div class=\"checkbox\">    \n\n            <p>Heterotypic interactions: </p>\n\n            <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setIdentification(e.target.value)}/>\n\n\n            </div>\n\n            <div class=\"checkbox\">    \n\n            <p>Permuted interactions: </p>\n\n            <input type = \"checkbox\" name=\"comparison\" onChange={(e)=>setIdentification(e.target.value)}/>\n\n\n            </div>\n        \n       </form>\n    </div>\n    </div>\n\n    )\n}\nexport default getSettings;"],"mappings":"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"},"metadata":{},"sourceType":"module"}