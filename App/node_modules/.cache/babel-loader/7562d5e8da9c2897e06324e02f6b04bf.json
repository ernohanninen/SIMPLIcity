{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getMetadata.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport GetSettings from \"./getSettings.js\";\nvar GetMetadata = forwardRef(function (props, ref, data) {\n  useImperativeHandle(ref, function () {\n    return {\n      getProcesses: function getProcesses() {\n        axios.get(\"/submitSettings\").then(function (response) {\n          console.log(response);\n          console.log(response.data[0]);\n          console.log(response.data[1]); //Parse values from response data to boolean format\n\n          for (var prop in response.data) {\n            if (response.data.hasOwnProperty(prop)) {\n              response.data[prop] = response.data[prop] == 'true' || response.data[prop] == 'false' ? response.data[prop] === 'true' : response.data[prop];\n            }\n          }\n\n          if (response.data.execute_area == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_sd_segmentation == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_type_identification == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_clustering == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_thresholding == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_homotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_heterotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_permuted_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          } //console.log(skip_area)\n          //console.log(response.data.skip_area)\n\n        });\n      },\n      submitMetadata: function submitMetadata() {\n        console.log(\"metadata\");\n        console.log(\"getMETADATA\");\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GetSettings, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n});\nexport default GetMetadata;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","GetSettings","GetMetadata","props","ref","data","getProcesses","get","then","response","console","log","prop","hasOwnProperty","execute_area","execute_sd_segmentation","execute_cell_type_identification","execute_cell_clustering","execute_cell_thresholding","execute_homotypic_interactions","execute_heterotypic_interactions","execute_permuted_interactions","submitMetadata"],"sources":["/home/ernohanninen/simpli-app/src/getMetadata.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport GetSettings from \"./getSettings.js\"\n\n\nconst GetMetadata = forwardRef((props, ref, data)=>{\n\n    useImperativeHandle(ref, ()=>({\n        getProcesses(){\n            axios.get(\"/submitSettings\")\n            .then(function(response){\n                console.log(response)\n                console.log(response.data[0])\n                console.log(response.data[1])\n\n                //Parse values from response data to boolean format\n                for (let prop in response.data) {\n                    if (response.data.hasOwnProperty(prop)) {\n                        response.data[prop] = (response.data[prop] == 'true' || response.data[prop] == 'false')? response.data[prop] === 'true': response.data[prop] ;\n                    }\n                } \n                if(response.data.execute_area == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_sd_segmentation == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_type_identification == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_clustering == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_thresholding == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_homotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_heterotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_permuted_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                \n                //console.log(skip_area)\n                //console.log(response.data.skip_area)\n            })\n        },\n        submitMetadata(){\n\n            console.log(\"metadata\")\n            \n\n            console.log(\"getMETADATA\")\n        }\n    }))\n    return(\n        <div>\n            <GetSettings />\n    \n        </div>\n    \n        )\n})\nexport default GetMetadata;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,mBAAvC,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAGA,IAAMC,WAAW,GAAGJ,UAAU,CAAC,UAACK,KAAD,EAAQC,GAAR,EAAaC,IAAb,EAAoB;EAE/CN,mBAAmB,CAACK,GAAD,EAAM;IAAA,OAAK;MAC1BE,YAD0B,0BACZ;QACVN,KAAK,CAACO,GAAN,CAAU,iBAAV,EACCC,IADD,CACM,UAASC,QAAT,EAAkB;UACpBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;UACAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,IAAT,CAAc,CAAd,CAAZ;UACAK,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,IAAT,CAAc,CAAd,CAAZ,EAHoB,CAKpB;;UACA,KAAK,IAAIO,IAAT,IAAiBH,QAAQ,CAACJ,IAA1B,EAAgC;YAC5B,IAAII,QAAQ,CAACJ,IAAT,CAAcQ,cAAd,CAA6BD,IAA7B,CAAJ,EAAwC;cACpCH,QAAQ,CAACJ,IAAT,CAAcO,IAAd,IAAuBH,QAAQ,CAACJ,IAAT,CAAcO,IAAd,KAAuB,MAAvB,IAAiCH,QAAQ,CAACJ,IAAT,CAAcO,IAAd,KAAuB,OAAzD,GAAmEH,QAAQ,CAACJ,IAAT,CAAcO,IAAd,MAAwB,MAA3F,GAAmGH,QAAQ,CAACJ,IAAT,CAAcO,IAAd,CAAzH;YACH;UACJ;;UACD,IAAGH,QAAQ,CAACJ,IAAT,CAAcS,YAAd,IAA8B,IAAjC,EAAsC;YAClCJ,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAcU,uBAAd,IAAyC,IAA5C,EAAiD;YAC7CL,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAcW,gCAAd,IAAkD,IAArD,EAA0D;YACtDN,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAcY,uBAAd,IAAyC,IAA5C,EAAiD;YAC7CP,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAca,yBAAd,IAA2C,IAA9C,EAAmD;YAC/CR,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAcc,8BAAd,IAAgD,IAAnD,EAAwD;YACpDT,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAce,gCAAd,IAAkD,IAArD,EAA0D;YACtDV,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGF,QAAQ,CAACJ,IAAT,CAAcgB,6BAAd,IAA+C,IAAlD,EAAuD;YACnDX,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH,CAlCmB,CAoCpB;UACA;;QACH,CAvCD;MAwCH,CA1CyB;MA2C1BW,cA3C0B,4BA2CV;QAEZZ,OAAO,CAACC,GAAR,CAAY,UAAZ;QAGAD,OAAO,CAACC,GAAR,CAAY,aAAZ;MACH;IAjDyB,CAAL;EAAA,CAAN,CAAnB;EAmDA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAOH,CA5D6B,CAA9B;AA6DA,eAAeT,WAAf"},"metadata":{},"sourceType":"module"}