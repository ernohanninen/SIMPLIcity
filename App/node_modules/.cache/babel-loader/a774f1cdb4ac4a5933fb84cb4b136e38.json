{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/ernohanninen/simpli-app/src/getMetadata.js\";\n\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport GetSettings from \"./getSettings.js\";\nvar GetMetadata = forwardRef(function (props, ref, data) {\n  useImperativeHandle(ref, function () {\n    return {\n      getProcesses: function getProcesses() {\n        axios.get(\"/submitSettings\").then(function (response1, response2) {\n          console.log(response);\n          console.log(response.data); //Parse values from response data to boolean format\n\n          for (var prop in response.data) {\n            if (response.data.hasOwnProperty(prop)) {\n              response.data[prop] = response.data[prop] == 'true' || response.data[prop] == 'false' ? response.data[prop] === 'true' : response.data[prop];\n            }\n          }\n\n          if (response.data.execute_area == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_sd_segmentation == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_type_identification == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_clustering == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_cell_thresholding == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_homotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_heterotypic_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          }\n\n          if (response.data.execute_permuted_interactions == true) {\n            console.log(\"RENDER SOMETHING\");\n          } //console.log(skip_area)\n          //console.log(response.data.skip_area)\n\n        });\n      },\n      submitMetadata: function submitMetadata() {\n        console.log(\"metadata\");\n        console.log(\"getMETADATA\");\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GetSettings, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n});\nexport default GetMetadata;","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","axios","GetSettings","GetMetadata","props","ref","data","getProcesses","get","then","response1","response2","console","log","response","prop","hasOwnProperty","execute_area","execute_sd_segmentation","execute_cell_type_identification","execute_cell_clustering","execute_cell_thresholding","execute_homotypic_interactions","execute_heterotypic_interactions","execute_permuted_interactions","submitMetadata"],"sources":["/home/ernohanninen/simpli-app/src/getMetadata.js"],"sourcesContent":["import React,  { useState, forwardRef, useImperativeHandle } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport GetSettings from \"./getSettings.js\"\n\n\nconst GetMetadata = forwardRef((props, ref, data)=>{\n\n    useImperativeHandle(ref, ()=>({\n        getProcesses(){\n            axios.get(\"/submitSettings\")\n            .then(function(response1, response2){\n                console.log(response)\n                console.log(response.data)\n                //Parse values from response data to boolean format\n                for (let prop in response.data) {\n                    if (response.data.hasOwnProperty(prop)) {\n                        response.data[prop] = (response.data[prop] == 'true' || response.data[prop] == 'false')? response.data[prop] === 'true': response.data[prop] ;\n                    }\n                } \n                if(response.data.execute_area == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_sd_segmentation == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_type_identification == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_clustering == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_cell_thresholding == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_homotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_heterotypic_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                if(response.data.execute_permuted_interactions == true){\n                    console.log(\"RENDER SOMETHING\")\n                }\n                \n                //console.log(skip_area)\n                //console.log(response.data.skip_area)\n            })\n        },\n        submitMetadata(){\n\n            console.log(\"metadata\")\n            \n\n            console.log(\"getMETADATA\")\n        }\n    }))\n    return(\n        <div>\n            <GetSettings />\n    \n        </div>\n    \n        )\n})\nexport default GetMetadata;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,mBAAvC,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAGA,IAAMC,WAAW,GAAGJ,UAAU,CAAC,UAACK,KAAD,EAAQC,GAAR,EAAaC,IAAb,EAAoB;EAE/CN,mBAAmB,CAACK,GAAD,EAAM;IAAA,OAAK;MAC1BE,YAD0B,0BACZ;QACVN,KAAK,CAACO,GAAN,CAAU,iBAAV,EACCC,IADD,CACM,UAASC,SAAT,EAAoBC,SAApB,EAA8B;UAChCC,OAAO,CAACC,GAAR,CAAYC,QAAZ;UACAF,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACR,IAArB,EAFgC,CAGhC;;UACA,KAAK,IAAIS,IAAT,IAAiBD,QAAQ,CAACR,IAA1B,EAAgC;YAC5B,IAAIQ,QAAQ,CAACR,IAAT,CAAcU,cAAd,CAA6BD,IAA7B,CAAJ,EAAwC;cACpCD,QAAQ,CAACR,IAAT,CAAcS,IAAd,IAAuBD,QAAQ,CAACR,IAAT,CAAcS,IAAd,KAAuB,MAAvB,IAAiCD,QAAQ,CAACR,IAAT,CAAcS,IAAd,KAAuB,OAAzD,GAAmED,QAAQ,CAACR,IAAT,CAAcS,IAAd,MAAwB,MAA3F,GAAmGD,QAAQ,CAACR,IAAT,CAAcS,IAAd,CAAzH;YACH;UACJ;;UACD,IAAGD,QAAQ,CAACR,IAAT,CAAcW,YAAd,IAA8B,IAAjC,EAAsC;YAClCL,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAcY,uBAAd,IAAyC,IAA5C,EAAiD;YAC7CN,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAca,gCAAd,IAAkD,IAArD,EAA0D;YACtDP,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAcc,uBAAd,IAAyC,IAA5C,EAAiD;YAC7CR,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAce,yBAAd,IAA2C,IAA9C,EAAmD;YAC/CT,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAcgB,8BAAd,IAAgD,IAAnD,EAAwD;YACpDV,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAciB,gCAAd,IAAkD,IAArD,EAA0D;YACtDX,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH;;UACD,IAAGC,QAAQ,CAACR,IAAT,CAAckB,6BAAd,IAA+C,IAAlD,EAAuD;YACnDZ,OAAO,CAACC,GAAR,CAAY,kBAAZ;UACH,CAhC+B,CAkChC;UACA;;QACH,CArCD;MAsCH,CAxCyB;MAyC1BY,cAzC0B,4BAyCV;QAEZb,OAAO,CAACC,GAAR,CAAY,UAAZ;QAGAD,OAAO,CAACC,GAAR,CAAY,aAAZ;MACH;IA/CyB,CAAL;EAAA,CAAN,CAAnB;EAiDA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ;AAOH,CA1D6B,CAA9B;AA2DA,eAAeV,WAAf"},"metadata":{},"sourceType":"module"}